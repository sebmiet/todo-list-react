{"version":3,"sources":["components/CreateTodo.js","components/EditTodo.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["CreateTodo","addTodo","todoId","useState","input","setInput","form","className","onSubmit","e","preventDefault","id","text","editTodo","isCompleted","createTime","Date","wasEdited","lastEdit","initial","opacity","x","animate","transition","duration","type","stiffness","onChange","target","value","placeholder","button","whileHover","color","repeat","Infinity","EditTodo","todo","handleUpdate","fade","Todo","handleDelete","handleEdit","handleComplete","div","exit","onClick","TodoList","data","todos","setTodos","setTodoId","dataBtn","setDataBtn","fetchedData","filter","item","userId","a","test","updatedTodos","map","todosMapping","y","delay","boxShadow","title","completed","concat","fetchedDataAdjustment","h3","h4","App","setData","fetchData","fetch","response","json","console","log","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f03697f5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport { motion } from \"framer-motion\";\n\nconst CreateTodo = ({ addTodo, todoId }) => {\n  const [input, setInput] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addTodo({\n      id: todoId,\n      text: input,\n      editTodo: false,\n      isCompleted: false,\n      createTime: new Date(),\n      wasEdited: false,\n      lastEdit: null,\n    });\n    setInput(\"\");\n  };\n\n  return (\n    <motion.form\n      className=\"create-todo-container\"\n      onSubmit={handleSubmit}\n      initial={{ opacity: 0, x: \"30vw\" }}\n      animate={{ opacity: 1, x: 0 }}\n      transition={{ duration: 0.5, type: \"spring\", stiffness: 80 }}\n    >\n      <input\n        className=\"create-todo-input\"\n        type=\"text\"\n        onChange={handleInputChange}\n        placeholder=\"Add some quest to your diary... ;)\"\n        value={input}\n      />\n      <motion.button\n        className=\"create-todo-button\"\n        whileHover={{\n          color: [\"#000000\", \"#e2e2e2\", \"#000000\"],\n          transition: { duration: 2.5, repeat: Infinity },\n        }}\n      >\n        Add Todo\n      </motion.button>\n    </motion.form>\n  );\n};\n\nexport default CreateTodo;\n","import React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\n\nconst EditTodo = ({ todo, handleUpdate }) => {\n  const [input, setInput] = useState(todo.text);\n\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleUpdate(todo.id, input);\n  };\n\n  return (\n    <motion.form\n      onSubmit={handleSubmit}\n      className=\"edit-todo-container\"\n      initial={{ opacity: 0, x: -700 }}\n      animate={{ opacity: 1, x: 0 }}\n      transition={{ fade: \"easeIn\", duration: 0.3, type: \"spring\" }}\n    >\n      <input\n        className=\"edit-todo-input\"\n        type=\"text\"\n        value={input}\n        onChange={handleInputChange}\n      />\n      <motion.button\n        whileHover={{\n          color: [\"#000000\", \"#e2e2e2\", \"#000000\"],\n          transition: { duration: 2.5, repeat: Infinity },\n        }}\n        className=\"edit-todo-button\"\n        // onClick={() => handleUpdate(todo.id, input)}\n      >\n        Update\n      </motion.button>\n    </motion.form>\n  );\n};\nexport default EditTodo;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\n\nimport { FaEdit, FaTimes, FaCheck } from \"react-icons/fa\";\n\nconst Todo = ({ todo, handleDelete, handleEdit, handleComplete }) => {\n  return (\n    <>\n      <motion.div\n        className={todo.isCompleted ? \"todo-item-completed\" : \"todo-item\"}\n        initial={{ opacity: 0, x: 500 }}\n        animate={{ opacity: 1, x: 0 }}\n        transition={{ fade: \"easeIn\", duration: 0.3, type: \"spring\" }}\n        exit={{ opacity: 0, transition: { fade: \"easeIn\", duration: 0.3 } }}\n      >\n        <div\n          onClick={() => handleComplete(todo.id)}\n          className=\"todo-item-complete-text\"\n        >\n          <p>{todo.text}</p>\n        </div>\n        <div>\n          {!todo.isCompleted && (\n            <span onClick={() => handleEdit(todo.id)} className=\"icon-edit\">\n              <FaEdit />\n            </span>\n          )}\n          {todo.isCompleted && (\n            <span className=\"icon-done\">\n              <FaCheck />\n            </span>\n          )}\n          <span onClick={() => handleDelete(todo.id)} className=\"icon-close\">\n            <FaTimes />\n          </span>\n        </div>\n      </motion.div>\n    </>\n  );\n};\n\nexport default Todo;\n","import React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\n\nimport CreateTodo from \"./CreateTodo\";\nimport EditTodo from \"./EditTodo\";\nimport Todo from \"./Todo\";\n\nconst TodoList = ({ data }) => {\n  const [todos, setTodos] = useState([]);\n  const [todoId, setTodoId] = useState(0);\n  const [dataBtn, setDataBtn] = useState(true);\n\n  const fetchedData = [...data].filter((item) => item.userId === 1);\n\n  const fetchedDataAdjustment = () => {\n    let data = fetchedData.map((todo) => {\n      todo = {\n        id: todo.id + 10000,\n        text: todo.title,\n        editTodo: false,\n        isCompleted: todo.completed,\n        createTime: new Date(),\n        wasEdited: false,\n        lastEdit: null,\n      };\n      return todo;\n    });\n    const updatedTodos = [...todos].concat(data);\n    setTodos(updatedTodos);\n  };\n\n  const addTodo = async (todo) => {\n    //Checking if input is empty or has just white spaces\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n    const updatedTodos = [todo, ...todos];\n    setTodos(updatedTodos);\n    setTodoId(todoId + 1);\n  };\n\n  const handleEdit = (id) => {\n    let updatedTodos = [...todos].map((todo) => {\n      if (todo.id === id) {\n        todo.editTodo = true;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  const handleUpdate = (id, text) => {\n    let updatedTodos = [...todos].map((todo) => {\n      if (todo.id === id) {\n        todo.text = text;\n        todo.editTodo = false;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  const handleDelete = (id) => {\n    const updatedTodos = [...todos].filter((todo) => id !== todo.id);\n    setTodos(updatedTodos);\n  };\n\n  const handleComplete = (id) => {\n    let updatedTodos = [...todos].map((todo) => {\n      if (todo.id === id) {\n        todo.isCompleted = !todo.isCompleted;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  const todosMapping = [...todos].map((todo) => {\n    if (todo.editTodo) {\n      return (\n        <EditTodo\n          key={todo.id + \"...editing\"}\n          todo={todo}\n          todos={todos}\n          setTodos={setTodos}\n          handleUpdate={handleUpdate}\n        />\n      );\n    }\n    return (\n      <Todo\n        key={todo.id}\n        isCompleted={todo.isCompleted}\n        todo={todo}\n        handleDelete={handleDelete}\n        handleEdit={handleEdit}\n        handleComplete={handleComplete}\n      />\n    );\n  });\n\n  return (\n    <div className=\"todo-container\">\n      <div\n        className=\"suppose-to-be-funny-text-container\"\n        // initial={{ opacity: 0 }}\n        // animate={{ opacity: 1 }}\n        // transition={{ duration: 2.5 }}\n      >\n        {dataBtn && (\n          <motion.button\n            initial={{ opacity: 0, y: -200 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{\n              duration: 0.5,\n              delay: 2,\n              y: { type: \"spring\", stiffness: 150 },\n            }}\n            whileHover={{\n              color: [\"#000000\", \"#e2e2e2\", \"#000000\"],\n              boxShadow: \"0 0 8px\",\n              transition: { duration: 3.5, repeat: Infinity },\n            }}\n            className=\"button-fetched-data\"\n            onClick={() => {\n              fetchedDataAdjustment();\n              setDataBtn(false);\n            }}\n          >\n            click for free dummy data :)\n          </motion.button>\n        )}\n        <motion.h3\n          className=\"title\"\n          initial={{ opacity: 0, x: \"-30vw\" }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{\n            duration: 0.5,\n            delay: 0.4,\n            x: { type: \"spring\", stiffness: 150 },\n          }}\n        >\n          Time to complete some Quests...\n        </motion.h3>\n        <motion.h4\n          className=\"subtitle\"\n          initial={{ opacity: 0, x: \"30vw\" }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{\n            duration: 0.5,\n            delay: 1,\n            x: { type: \"spring\", stiffness: 100 },\n          }}\n        >\n          Isn't life just some RPG game?\n        </motion.h4>\n      </div>\n      <CreateTodo addTodo={addTodo} todoId={todoId} />\n      {todosMapping}\n    </div>\n  );\n};\nexport default TodoList;\n","import React, { useState, useEffect } from \"react\";\nimport TodoList from \"./components/TodoList\";\n\nconst App = () => {\n  const [data, setData] = useState([]);\n\n  const API_URL = \"https://jsonplaceholder.typicode.com/todos\";\n\n  const fetchData = async () => {\n    const response = await fetch(API_URL);\n    const data = await response.json();\n    setData(data);\n    console.log(data);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <TodoList data={data} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}